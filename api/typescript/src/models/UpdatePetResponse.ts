/* tslint:disable */
/* eslint-disable */
/**
 * Pet Shop API
 * Pet Shop API A comprehensive example of Micronaut application best practices for a pet shop
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Pet } from './Pet';
import {
    PetFromJSON,
    PetFromJSONTyped,
    PetToJSON,
} from './Pet';

/**
 * Pet update response
 * @export
 * @interface UpdatePetResponse
 */
export interface UpdatePetResponse {
    /**
     * 
     * @type {Pet}
     * @memberof UpdatePetResponse
     */
    pet: Pet;
}

/**
 * Check if a given object implements the UpdatePetResponse interface.
 */
export function instanceOfUpdatePetResponse(value: object): value is UpdatePetResponse {
    if (!('pet' in value) || value['pet'] === undefined) return false;
    return true;
}

export function UpdatePetResponseFromJSON(json: any): UpdatePetResponse {
    return UpdatePetResponseFromJSONTyped(json, false);
}

export function UpdatePetResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdatePetResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'pet': PetFromJSON(json['pet']),
    };
}

export function UpdatePetResponseToJSON(value?: UpdatePetResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'pet': PetToJSON(value['pet']),
    };
}

