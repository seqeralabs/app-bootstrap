/* tslint:disable */
/* eslint-disable */
/**
 * Pet Shop API
 * Pet Shop API A comprehensive example of Micronaut application best practices for a pet shop
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Pet update request
 * @export
 * @interface UpdatePetRequest
 */
export interface UpdatePetRequest {
    /**
     * Pet's name
     * @type {string}
     * @memberof UpdatePetRequest
     */
    name: string;
    /**
     * Pet species (e.g., dog, cat, bird)
     * @type {string}
     * @memberof UpdatePetRequest
     */
    species: string;
    /**
     * Pet breed
     * @type {string}
     * @memberof UpdatePetRequest
     */
    breed?: string;
    /**
     * Pet age in years
     * @type {number}
     * @memberof UpdatePetRequest
     */
    age: number;
    /**
     * Pet color
     * @type {string}
     * @memberof UpdatePetRequest
     */
    color?: string;
    /**
     * Pet description
     * @type {string}
     * @memberof UpdatePetRequest
     */
    description?: string;
    /**
     * Whether the pet is available for adoption
     * @type {boolean}
     * @memberof UpdatePetRequest
     */
    isAvailable: boolean;
}

/**
 * Check if a given object implements the UpdatePetRequest interface.
 */
export function instanceOfUpdatePetRequest(value: object): value is UpdatePetRequest {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('species' in value) || value['species'] === undefined) return false;
    if (!('age' in value) || value['age'] === undefined) return false;
    if (!('isAvailable' in value) || value['isAvailable'] === undefined) return false;
    return true;
}

export function UpdatePetRequestFromJSON(json: any): UpdatePetRequest {
    return UpdatePetRequestFromJSONTyped(json, false);
}

export function UpdatePetRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdatePetRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'species': json['species'],
        'breed': json['breed'] == null ? undefined : json['breed'],
        'age': json['age'],
        'color': json['color'] == null ? undefined : json['color'],
        'description': json['description'] == null ? undefined : json['description'],
        'isAvailable': json['isAvailable'],
    };
}

export function UpdatePetRequestToJSON(value?: UpdatePetRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'species': value['species'],
        'breed': value['breed'],
        'age': value['age'],
        'color': value['color'],
        'description': value['description'],
        'isAvailable': value['isAvailable'],
    };
}

