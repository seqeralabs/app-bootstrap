/* tslint:disable */
/* eslint-disable */
/**
 * Pet Shop API
 * Pet Shop API A comprehensive example of Micronaut application best practices for a pet shop
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Pet } from './Pet';
import {
    PetFromJSON,
    PetFromJSONTyped,
    PetToJSON,
} from './Pet';

/**
 * List pets response
 * @export
 * @interface ListPetsResponse
 */
export interface ListPetsResponse {
    /**
     * 
     * @type {Array<Pet>}
     * @memberof ListPetsResponse
     */
    pets: Array<Pet>;
}

/**
 * Check if a given object implements the ListPetsResponse interface.
 */
export function instanceOfListPetsResponse(value: object): value is ListPetsResponse {
    if (!('pets' in value) || value['pets'] === undefined) return false;
    return true;
}

export function ListPetsResponseFromJSON(json: any): ListPetsResponse {
    return ListPetsResponseFromJSONTyped(json, false);
}

export function ListPetsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListPetsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'pets': ((json['pets'] as Array<any>).map(PetFromJSON)),
    };
}

export function ListPetsResponseToJSON(value?: ListPetsResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'pets': ((value['pets'] as Array<any>).map(PetToJSON)),
    };
}

