/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    // Apply the groovy Plugin to add support for Groovy.
    id 'io.seqera.java-common-conventions'
    id 'java-library'
    id 'maven-publish'
}

test {
    useJUnitPlatform()
}

group = 'io.seqera'

java {
    withSourcesJar()
}

dependencies {
    implementation 'org.slf4j:slf4j-api:2.0.16'

    testImplementation 'ch.qos.logback:logback-core:1.5.15'
    testImplementation 'ch.qos.logback:logback-classic:1.5.15'
    testImplementation "org.apache.groovy:groovy:4.0.24"
    testImplementation "org.apache.groovy:groovy-nio:4.0.24"
    testImplementation ("org.apache.groovy:groovy-test:4.0.24")
    testImplementation ("cglib:cglib-nodep:3.3.0")
    testImplementation ("org.objenesis:objenesis:3.4")
    testImplementation ("org.spockframework:spock-core:2.3-groovy-4.0")
    testImplementation ('org.spockframework:spock-junit4:2.3-groovy-4.0')
}

tasks.withType(Test) {
    jvmArgs ([
            '--add-opens=java.base/java.lang=ALL-UNNAMED',
            '--add-opens=java.base/java.io=ALL-UNNAMED',
            '--add-opens=java.base/java.nio=ALL-UNNAMED',
            '--add-opens=java.base/java.nio.file.spi=ALL-UNNAMED',
            '--add-opens=java.base/java.net=ALL-UNNAMED',
            '--add-opens=java.base/java.util=ALL-UNNAMED',
            '--add-opens=java.base/java.util.concurrent.locks=ALL-UNNAMED',
            '--add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED',
            '--add-opens=java.base/sun.nio.ch=ALL-UNNAMED',
            '--add-opens=java.base/sun.nio.fs=ALL-UNNAMED',
            '--add-opens=java.base/sun.net.www.protocol.http=ALL-UNNAMED',
            '--add-opens=java.base/sun.net.www.protocol.https=ALL-UNNAMED',
            '--add-opens=java.base/sun.net.www.protocol.ftp=ALL-UNNAMED',
            '--add-opens=java.base/sun.net.www.protocol.file=ALL-UNNAMED',
            '--add-opens=java.base/jdk.internal.misc=ALL-UNNAMED',
            '--add-opens=java.base/jdk.internal.vm=ALL-UNNAMED',
    ])
}

publishing {
    repositories {
        maven {
            name = "Seqera"
            url = project.findProperty('publish_repo_url') ?: System.getenv('PUBLISH_REPO_URL') ?: "s3://maven.seqera.io/snapshots"
            credentials(AwsCredentials) {
                accessKey = project.findProperty('aws_access_key_id') ?: System.getenv('AWS_ACCESS_KEY_ID')
                secretKey = project.findProperty('aws_secret_access_key') ?: System.getenv('AWS_SECRET_ACCESS_KEY')
            }
        }
    }
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}
